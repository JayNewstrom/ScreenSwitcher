ext {
    minSdkVersion = 15
    targetSdkVersion = 26
    compileSdkVersion = 26
    buildToolsVersion = '26.0.2'
    sourceCompatibilityVersion = JavaVersion.VERSION_1_7
    targetCompatibilityVersion = JavaVersion.VERSION_1_7
    supportLibraryVersion = '26.1.0'
    daggerVersion = '2.11'
    butterknifeVersion = '9.0.0-SNAPSHOT'
}

ext.deps = [
        supportAnnotations: "com.android.support:support-annotations:$supportLibraryVersion",
        appCompatv7: "com.android.support:appcompat-v7:$supportLibraryVersion",
        dagger: "com.google.dagger:dagger:$daggerVersion",
        daggerCompiler: "com.google.dagger:dagger-compiler:$daggerVersion",
        concrete: 'com.jaynewstrom:concrete:0.10.0',
        jsr305: 'com.google.code.findbugs:jsr305:3.0.2',
        butterknife: "com.jakewharton:butterknife:$butterknifeVersion",
        butterknifeProcessor: "com.jakewharton:butterknife-compiler:$butterknifeVersion",

        junit: 'junit:junit:4.12',
        fest: 'org.easytesting:fest-assert-core:2.0M10',
        mockitoCore: 'org.mockito:mockito-core:2.10.0',
        androidTestRunner: 'com.android.support.test:runner:1.0.1',
        androidTestRules: 'com.android.support.test:rules:1.0.1',
        espressoCore: 'com.android.support.test.espresso:espresso-core:3.0.1',
]

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.0-beta7'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    }

    configurations.all {
        resolutionStrategy {
            force "com.android.support:support-annotations:$supportLibraryVersion"
        }
    }
}

subprojects {
    buildscript {
        repositories {
            google()
            jcenter()
            maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        }
        dependencies {
            classpath 'com.android.tools.build:gradle:3.0.0-beta7'
            classpath "com.jakewharton:butterknife-gradle-plugin:$butterknifeVersion"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    configureAndroidPlugin(it)
    configureCheckstylePlugin(it)
}

def configureAndroidPlugin(Project project) {
    def closure = {
        project.android {
            compileSdkVersion rootProject.ext.compileSdkVersion
            buildToolsVersion rootProject.ext.buildToolsVersion

            defaultConfig {
                minSdkVersion rootProject.ext.minSdkVersion
            }

            compileOptions {
                sourceCompatibility sourceCompatibilityVersion
                targetCompatibility targetCompatibilityVersion
            }

            lintOptions {
                lintConfig rootProject.file('lint.xml')
            }

            dexOptions {
                preDexLibraries true
            }
        }
    }

    project.plugins.withId('com.android.application', closure)
    project.plugins.withId('com.android.library', closure)
}

def configureCheckstylePlugin(Project project) {
    project.apply plugin: 'checkstyle'

    project.checkstyle {
        toolVersion = '7.7'
        configFile rootProject.file('checkstyle.xml')
        showViolations true
        configProperties = ['checkstyle.cache.file': rootProject.file('build/checkstyle.cache')]
    }

    project.tasks.create("checkstyle", Checkstyle.class) {
        source 'src'
        include '**/*.java'

        // empty classpath
        classpath = files()
    }
}
